**Task1** Enabling Security Command Center API 
In order to enable the SCC API, I did the following:
1. On the google cloud console, I clicked on the Navigation menu in the top left corner of the Google Cloud console.
2. Select APIs & Services from the drop down and click on Enable APIs & Services and click + Enable APIs & Services
3. I then searched for Security Command Center API in the search box.
4. Click on Security Command Center API, then click Enable.

**Task2**-  Initiate and mitigate a threat with Event Threat Detection
The Event Threat Detection service of SCC detects many threats by monitoring suspicious activities reported in Google Cloud logs. 
One of these activities might be delegating sensitive roles to an external user, such as someone who has a miscellaneous gmail.com account that isn't tied to your corporate domain.
This might happen in situations when an intruder has managed to access a GCP organization and now they are interested in establishing persistence.
To do this, the hacker would grant sensitive roles to their @gmail.com account.This delegation simulates establishing persistence. 
If a hacker accidentally gets temporary access to Cymbal's system, they will need to establish persistence and to get access to a more stable account.
For this project, In order to initiate and mitigate the threat, I followed these processes
1. In the Google Cloud Console, I opened the navigation menu and selected IAM & Admin > IAM. Press the Grant Access button.
2. In the "New principals" field, I entered the demo email address which is = demouser1@gmail.com
3. For the Role field, I selected BigQuery > BigQuery Admin and clicked Save.
4. Open the navigation menu and select Security > Security Command Center > Findings. Changed the Time Range dropdown to the Last 6 hours.
5. Of the three Findings, I clicked on the Finding Non org IAM member and scroll down to check the "Source display name" in the description of this Finding.
6. I ensured that the display name is set to Security Health Analytics. I closed the window with the Finding.
7. I clicked on the other Finding Persistence: IAM anomalous grant and scrolled down to check the "Source display name" in the description of this Finding.
8. I ensured that the display name is set to "Event Threat Detection"â€”this is the SCC service that detected a misconfiguration in the Project.
9. I now scrolled to the top of the window and select the tab Source Properties. In this tab expand the Properties > sensitiveRoleGrant field.
10. This is where I found:
principalEmail: who performed the suspicious action
bindingDetails: information about the role and the member to whom this role has been granted
members: to whom the permission has been granted
11. Now, From the navigation menu, select IAM & Admin > IAM.
12. I now clicked the checkbox next to the demouser1@gmail.com principal and clicked the button Remove Access. Clicked Confirm
13. Now I opened the navigation menu and select Security > Security Command Center > Findings.
Observation
I noted that the Findings "Non org IAM member" has disappeared from the list of findings. 
This is because the Security Health Analytics service has checked the updated configuration of IAM policies and deactivated this Finding.

**Task3**-Configuring a secured cloud environment to detect threats
In this section, I'll configure Cymbal's environment to detect service account threats through logging.
In this scenario, a malicious actor exploits vulnerable software on a virtual machine and obtains access to 
the Default Service Account (which was used to create the instance). The actor wants to understand what they can do in the Google Cloud environment. 
To check their permissions, the actor will call the projects.getIamPolicy method. SCC should detect and report this suspicious activity recorded in the logs.
For SCC to detect this activity, we need to enable Resource Manager Admin Read logs
1. In the Google Cloud Console, I opened the navigation menu and selected IAM & Admin > Audit Logs.
2. I found the Cloud Resource Manager API and clicked the checkbox next to it.
3. On the right side of the tab, find the configuration frame: Cloud Resource Manager API - Permission Types. Select the Admin Read check box and click Save.

For reproducing the scenario, I needed to create a new virtual machine with a default Service Account and cloud-platform access scope.
4. I open the navigation menu and select Compute Engine > VM instances. click the Create Instance button. Select region as Region and set zone as Zone.
5. In the "Access scopes" section, select the Allow full access to all Cloud APIs value. Click Create to launch the new VM instance.
6. Once the instance was created, I clicked on the SSH button and run the code: gcloud projects get-iam-policy $(gcloud config get project)
7. Now, I opened the navigation menu and selected Security > Security Command Center > Findings. Set the value of the time range selector to Last hour
8. Now, click on the Finding Discovery: service account self-investigation. Select the Source Properties tab at the top of the window.
9. Then I clicked on the checkbox next to the Discovery: Service Account Self-Investigation Finding.
10. clicked on the MUTE OPTIONS drop-down list. Then select the Apply mute override option. Then I ensured that the Finding no longer appears in the SCC interface.

**Task4** - Managing SCC findings with Event Threat Detection
In the previous task, I enabled logs for the Resource Manager service using an IAM configuration. 
For logging all DNS queries, I will need to create a DNS policy with enabled logging. For detecting some findings, I also need to create additional configurations, such as DNS policies.
This will allow me to detect malicious software running on compute resources and identify well-known malicious DNS addresses.
1. To enable full DNS query logging, I opened the Navigation menu clicked View All Products and select Network services > Cloud DNS.
2. Select the "DNS Server Policies" tab and then clicked the Create Policy button.
3. Enter dns-test-policy for the name of the DNS policy. Select the On radio-button for DNS logs.
4. In the "Alternate DNS servers" part, select default from the network dropdown and click OK. Click the Create button.
5. Then I returned to the SSH session of our virtual machine and try connecting to the malicious URL by running the following command: curl etd-malware-trigger.goog
6. I returned to the Google Cloud Console, opened the navigation menu and select Security > Security Command Center > Findings. Then I saw a new threat appear "Malware: Bad Domain"
7. I clicked on this Finding. In the new window, click on the SOURCE PROPERTIES tab. Then I closed the Finding Window
8. I clicked on the checkbox near the Finding Malware: Bad Domain and clicked on the Mute Options drop-down list.
9. Clicked Apply mute override. This Finding will now be removed from the SCC interface. From the navigation menu, select Compute Engine > VM instances.
10. Click on the checkbox next to the virtual machine instance you created previously and press Delete. Confirm the delete action by clicking Delete.






